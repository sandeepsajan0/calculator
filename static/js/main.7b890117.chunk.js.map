{"version":3,"sources":["logo.svg","Calculate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Calculate","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","answer","calculateAnswer","bind","assertThisInitialized","props1","danswer","calc","props","i","length","isNaN","count_array","count_array1","console","log","parseInt","react_default","a","createElement","React","Component","App","buttons","clicked","handleClick","handleSubmit","event","name","target","window","location","reload","setState","concat","className","style","backgroundColor","textAlign","onClick","src_Calculate","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b890117.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\n\n\t// setflag(props1){\n //    \tif(isNaN(props1) && !this.state.flag){\n //    \t\tif (props1 === \"+\"){\n //    \t\t\tconsole.log(\"update flag\",this.state.flag,props1)\n //    \t\t\tthis.setState({\n //    \t\t\t\tflag:\"add\"\n //    \t\t\t})\n //    \t\t\tconsole.log(\"updated flag\",this.state.flag)\n //    \t\t}\n //    \t\telse if (props1 === \"-\") {\n //    \t\t\tthis.setState({\n //    \t\t\t\tflag:\"sub\"\n //    \t\t\t})\n //    \t\t}\n //    \t\telse if (props1 === \"*\") {\n //    \t\t\tthis.setState({\n //    \t\t\t\tflag:\"mul\"\n //    \t\t\t})\n //    \t\t}\n //    \t\telse if (props1 === \"/\") {\n //    \t\t\tthis.setState({\n //    \t\t\t\tflag:\"div\"\n //    \t\t\t})\n //    \t\t}\n //    \t}\n //    \tconsole.log(\"props\",this.state.flag,props1)\n //    \tthis.isnumber(props1)\n    \t\n //    }\n\n\n //    isnumber(props){\n //    \tif(!isNaN(props) && !this.state.flag) {\n //    \t\tlet newnumber = this.state.firstNumber + props\n //    \t\tconsole.log(\"firstNumber\",newnumber)\n //    \t\tthis.setState({\n //                firstNumber:newnumber\n\n //    \t    })\n //    \t}\n //    \tif(!isNaN(props) && this.state.flag) {\n //    \t\tlet newnumber1 = this.state.secondNumber + props\n //    \t\tthis.setState({\n //    \t\t\tsecondNumber:newnumber1,\n //    \t\t\tflag:\"\"\n //    \t    \t})\n //    \t}\n //    \tif (isNaN(props)){\n //    \t\tif(this.state.flag === \"add\")  {\n //    \t\t\tlet newnumber2 = this.state.firstNumber + this.state.secondNumber\n //    \t\t\tthis.setState({\n //    \t\t\t\tfirstNumber: newnumber2\n //    \t\t    })\n //    \t\t}\t\n //    \t}\n //    \tconsole.log(this.state.firstNumber)\n\n //    }\n\n    \n\n\nclass Calculate extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state={\n\t\t\tanswer:\"\"\n\t\t}\n\t\tthis.calculateAnswer=this.calculateAnswer.bind(this)\n\t}\n    \n    calculateAnswer(){\n    \tlet props1 = -1\n    \tlet danswer=\"\"\n    \tconst { calc } = this.props\n    \tfor(var i =0; i < calc.length;i++){\n    \t\tif(isNaN(calc[i])){\n    \t\t\tprops1= i;\n    \t\t\tbreak;\n    \t\t}\n    \t}\n\n    \tlet count_array = \"\"\n    \tfor( i=0; i < props1;i++) {\n    \t\tcount_array = count_array+calc[i];\n    \t}\n    \tlet count_array1 = \"\"\n    \tfor( i= props1+1; i < calc.length; i++){\n    \t\tcount_array1 = count_array1+calc[i]\n    \t}\n    \tconsole.log(props1,\"calcualted array\",count_array,count_array1)\n    \tif(calc[props1] === \"+\"){\n    \t\tdanswer= parseInt(count_array,10) + parseInt(count_array1,10)\n    \t}\n    \telse if(calc[props1] === \"-\"){\n    \t\tdanswer= parseInt(count_array,10) - parseInt(count_array1,10)\n    \t}\n    \telse if(calc[props1] === \"*\"){\n    \t\tdanswer= parseInt(count_array,10) * parseInt(count_array1,10)\n    \t}\n    \telse if(calc[props1] === \"/\"){\n    \t\tdanswer= parseInt(count_array,10) / parseInt(count_array1,10)\n    \t}\n\n    \treturn(\n    \t\t<h1>= {danswer}</h1>\n    \t\t)\n\n    }\n\n\n\trender(){\n\t\t\n\t\t\t// return <div> {(this.props.calc[item]) => this.setflag(this.props.calc[item])} </div>\n\n\t\treturn(\n\t\t\t<div>\n\t\t\t{this.calculateAnswer()}\n\t\t\t</div>\n\t\t)\n\t\t\n\t}\n}\n\nexport default Calculate","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Calculate from \"./Calculate\"\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n    \tbuttons: [],\n    \tclicked:false\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleClick(event){\n    let name = event.target.name\n    if(name === \"AC\"){\n    \twindow.location.reload()\n    }\n    else{\n      this.setState(state =>{\n        \tconst buttons = state.buttons.concat(name)\n        \treturn{\n        \t  buttons\n        \t}\n        })\n    }\n  }\n\n  handleSubmit(event){\n  \tconsole.log(this.state.buttons)\n    this.setState({\n    \tclicked:true\n    })\n  }\n  render() {\n    return (\n      <div className=\"calculator\">\n      <h1 style={{backgroundColor:\"white\", textAlign:\"center\"}}> Calculator</h1>\n        <div className=\"left\">\n          <div>\n            <button className=\"button\" name=\"1\" onClick={this.handleClick}>1</button>\n            <button className=\"button\" name=\"2\" onClick={this.handleClick}>2</button>\n            <button className=\"button\" name=\"3\" onClick={this.handleClick}>3</button>\n            <button className=\"button\" name=\"+\" onClick={this.handleClick}>+</button>\n          </div>\n          <div>\n            <button className=\"button\" name=\"4\" onClick={this.handleClick}>4</button>\n            <button className=\"button\" name=\"5\" onClick={this.handleClick}>5</button>\n            <button className=\"button\" name=\"6\" onClick={this.handleClick}>6</button>\n            <button className=\"button\" name=\"-\" onClick={this.handleClick}>-</button>\n          </div>\n          <div>\n            <button className=\"button\" name=\"7\" onClick={this.handleClick}>7</button>\n            <button className=\"button\" name=\"8\" onClick={this.handleClick}>8</button>\n            <button className=\"button\" name=\"9\" onClick={this.handleClick}>9</button>\n            <button className=\"button\" name=\"/\" onClick={this.handleClick}>/</button>\n          </div>\n          <div>\n            <button className=\"button\" name=\"AC\" onClick={this.handleClick}>AC</button>\n            <button className=\"calculateButton\" name=\"Submit\" onClick={this.handleSubmit}>Calculate</button>\n            <button className=\"button\" name=\"*\" onClick={this.handleClick}>*</button>\n          </div>\n        </div>\n        <div className=\"right\">\n          <h1>{this.state.buttons}</h1>\n          {this.state.clicked ? <Calculate calc={this.state.buttons} /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}